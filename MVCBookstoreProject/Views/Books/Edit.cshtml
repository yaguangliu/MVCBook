@using MVCBookstoreProject.ViewModels
@using MVCBookstoreProject.Helpers
@model MVCBookstoreProject.ViewModels.BookViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="container mb-3">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">
            <a href="~/Admin/Index">Dashboard</a>
        </li>
        <li class="breadcrumb-item ">Books</li>
        <li class="breadcrumb-item active">Edit Book</li>
    </ol>
    <div class="card-body border border-light shadow">
        @using (Html.BeginForm("Edit", "Books", FormMethod.Post, new { @enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal ml-2">
                @*<h4>Book</h4>*@
                @*<hr />*@
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.BookId)
                <div class="row">
                    <div class="form-group col-md-6 ">
                        @Html.LabelFor(model => model.BookName, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.BookName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BookName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6 ">
                        @Html.LabelFor(model => model.Author, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Author, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Author, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PublisherId, "PublisherId", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownList("PublisherId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PublisherId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.PublishedDate, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.PublishedDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PublishedDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.LanguageId, "LanguageId", htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.DropDownList("LanguageId", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.LanguageId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @Html.TextAreaFor(model => model.Description, new
                            {
                                @placeholder = "Please enter the description",
                                cols = "64",
                                rows = "5",
                                htmlAttributes = new { @class = "form-control" },
                                @draggable = "true"
                            })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label col-md-12" })
                        <div class="col-md-12">
                            @*@Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control" } })*@
                            @if (Model.PhotoDb != null)
                            {
                                @Html.GetThumbnail(Model.PhotoDb, 120, 120)
                            }
                            <input type="file" name="Photo" accept="image/x-png,image/gif,image/jpeg" style="margin-top: 5px;" />
                            @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>
                
                <div class="row">
                    <div class="form-group col-md-6">
                        @Html.LabelFor(model => model.isAvailable, htmlAttributes: new { @class = "control-label col-md-4 " })
                        @*<div class="col-md-2">*@
                        @Html.EditorFor(model => model.isAvailable)
                        @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "text-danger" })
                        @* </div> *@
                    </div>
                    <div class="form-group col-md-6">
                        <div class="col-md-offset-10 col-md-2">
                            <input type="submit" value="Create" class="btn btn-success" />
                        </div>
                    </div>

                </div>

               
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

